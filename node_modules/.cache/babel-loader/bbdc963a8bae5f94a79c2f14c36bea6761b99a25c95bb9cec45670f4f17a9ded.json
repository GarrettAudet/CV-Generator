{"ast":null,"code":"var _jsxFileName = \"/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/WorkExperience/Experience.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport JobEntry from './JobEntry';\nimport SegmentHeader from '../subHeader/segmentHeader';\nimport { faToolbox } from '@fortawesome/free-solid-svg-icons';\nimport { jobsData } from '../sampleData/sampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Experience() {\n  _s();\n  const [jobs, setJobs] = useState(jobsData);\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleJobVisibility = id => {\n    const updatedJobs = jobs.map(job => {\n      if (job.id === id) {\n        return {\n          ...job,\n          isVisible: !job.isVisible\n        };\n      }\n      return job;\n    });\n    setJobs(updatedJobs);\n  };\n  const handleFieldChange = (index, field, value) => {\n    const newJobs = jobs.map((job, idx) => {\n      if (idx === index) {\n        return {\n          ...job,\n          [field]: value\n        };\n      }\n      return job;\n    });\n    setJobs(newJobs);\n  };\n  const handleDateChange = (index, field, date) => {\n    const newJobs = jobs.map((job, idx) => {\n      if (idx === index) {\n        return {\n          ...job,\n          [field]: date\n        };\n      }\n      return job;\n    });\n    setJobs(newJobs);\n  };\n  const toggleVisibility = () => setIsVisible(!isVisible);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Experience LHSInput\",\n    children: [/*#__PURE__*/_jsxDEV(SegmentHeader, {\n      icon: faToolbox,\n      headerText: \"Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobEntry, {\n      job: job,\n      onChange: (field, value) => handleFieldChange(index, field, value),\n      onDateChange: (field, date) => handleDateChange(index, field, date)\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Experience, \"pNngcpE1Wu3bHWnzsh3Er9u9ULA=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","JobEntry","SegmentHeader","faToolbox","jobsData","jsxDEV","_jsxDEV","Experience","_s","jobs","setJobs","isVisible","setIsVisible","toggleJobVisibility","id","updatedJobs","map","job","handleFieldChange","index","field","value","newJobs","idx","handleDateChange","date","toggleVisibility","className","children","icon","headerText","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onDateChange","_c","$RefreshReg$"],"sources":["/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/WorkExperience/Experience.js"],"sourcesContent":["import React, { useState } from 'react';\nimport JobEntry from './JobEntry';\nimport SegmentHeader from '../subHeader/segmentHeader'\nimport { faToolbox } from '@fortawesome/free-solid-svg-icons';\nimport { jobsData } from '../sampleData/sampleData';\n\nfunction Experience() {\n    const [jobs, setJobs] = useState(jobsData);\n    const [isVisible, setIsVisible] = useState(false);\n\n    const toggleJobVisibility = (id) => {\n        const updatedJobs = jobs.map(job => {\n            if (job.id === id) {\n                return { ...job, isVisible: !job.isVisible };\n            }\n            return job;\n        });\n        setJobs(updatedJobs);\n    };\n\n    const handleFieldChange = (index, field, value) => {\n        const newJobs = jobs.map((job, idx) => {\n            if (idx === index) {\n                return { ...job, [field]: value };\n            }\n            return job;\n        });\n        setJobs(newJobs);\n    };\n\n    const handleDateChange = (index, field, date) => {\n        const newJobs = jobs.map((job, idx) => {\n            if (idx === index) {\n                return { ...job, [field]: date };\n            }\n            return job;\n        });\n        setJobs(newJobs);\n    };\n\n    const toggleVisibility = () => setIsVisible(!isVisible);\n\n    return (\n        <div className = \"Experience LHSInput\">\n            <SegmentHeader icon={faToolbox} headerText=\"Experience\" />\n            {jobs.map((job, index) => (\n                <JobEntry \n                    key={job.id}\n                    job={job}\n                    onChange={(field, value) => handleFieldChange(index, field, value)}\n                    onDateChange={(field, date) => handleDateChange(index, field, date)}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default Experience;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}