{"ast":null,"code":"var _jsxFileName = \"/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/WorkExperience/Experience.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport JobEntry from './JobEntry';\nimport SegmentHeader from '../subHeader/segmentHeader';\nimport { faToolbox } from '@fortawesome/free-solid-svg-icons';\nimport { jobsData } from '../sampleData/sampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Experience() {\n  _s();\n  const [jobs, setJobs] = useState(jobsData);\n  const handleFieldChange = (index, field, value) => {\n    const newJobs = jobs.map((job, idx) => {\n      if (idx === index) {\n        return {\n          ...job,\n          [field]: value\n        };\n      }\n      return job;\n    });\n    setJobs(newJobs);\n  };\n  const handleDateChange = (index, field, date) => {\n    const newJobs = jobs.map((job, idx) => {\n      if (idx === index) {\n        return {\n          ...job,\n          [field]: date\n        };\n      }\n      return job;\n    });\n    setJobs(newJobs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SegmentHeader, {\n      icon: faToolbox,\n      headerText: \"Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobEntry, {\n      job: job,\n      onChange: (field, value) => handleFieldChange(index, field, value),\n      onDateChange: (field, date) => handleDateChange(index, field, date)\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Experience, \"YoSiSSe5O6NAUCWfukHVaT+NTa4=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","JobEntry","SegmentHeader","faToolbox","jobsData","jsxDEV","_jsxDEV","Experience","_s","jobs","setJobs","handleFieldChange","index","field","value","newJobs","map","job","idx","handleDateChange","date","children","icon","headerText","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onDateChange","id","_c","$RefreshReg$"],"sources":["/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/WorkExperience/Experience.js"],"sourcesContent":["import React, { useState } from 'react';\nimport JobEntry from './JobEntry';\nimport SegmentHeader from '../subHeader/segmentHeader'\nimport { faToolbox } from '@fortawesome/free-solid-svg-icons';\nimport { jobsData } from '../sampleData/sampleData';\n\nfunction Experience() {\n    const [jobs, setJobs] = useState(jobsData);\n\n    const handleFieldChange = (index, field, value) => {\n        const newJobs = jobs.map((job, idx) => {\n            if (idx === index) {\n                return { ...job, [field]: value };\n            }\n            return job;\n        });\n        setJobs(newJobs);\n    };\n\n    const handleDateChange = (index, field, date) => {\n        const newJobs = jobs.map((job, idx) => {\n            if (idx === index) {\n                return { ...job, [field]: date };\n            }\n            return job;\n        });\n        setJobs(newJobs);\n    };\n\n    return (\n        <div>\n            <SegmentHeader icon={faToolbox} headerText=\"Experience\" />\n            {jobs.map((job, index) => (\n                <JobEntry \n                    key={job.id}\n                    job={job}\n                    onChange={(field, value) => handleFieldChange(index, field, value)}\n                    onDateChange={(field, date) => handleDateChange(index, field, date)}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default Experience;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACI,QAAQ,CAAC;EAE1C,MAAMO,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC/C,MAAMC,OAAO,GAAGN,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MACnC,IAAIA,GAAG,KAAKN,KAAK,EAAE;QACf,OAAO;UAAE,GAAGK,GAAG;UAAE,CAACJ,KAAK,GAAGC;QAAM,CAAC;MACrC;MACA,OAAOG,GAAG;IACd,CAAC,CAAC;IACFP,OAAO,CAACK,OAAO,CAAC;EACpB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAACP,KAAK,EAAEC,KAAK,EAAEO,IAAI,KAAK;IAC7C,MAAML,OAAO,GAAGN,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MACnC,IAAIA,GAAG,KAAKN,KAAK,EAAE;QACf,OAAO;UAAE,GAAGK,GAAG;UAAE,CAACJ,KAAK,GAAGO;QAAK,CAAC;MACpC;MACA,OAAOH,GAAG;IACd,CAAC,CAAC;IACFP,OAAO,CAACK,OAAO,CAAC;EACpB,CAAC;EAED,oBACIT,OAAA;IAAAe,QAAA,gBACIf,OAAA,CAACJ,aAAa;MAACoB,IAAI,EAAEnB,SAAU;MAACoB,UAAU,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDlB,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEL,KAAK,kBACjBN,OAAA,CAACL,QAAQ;MAELgB,GAAG,EAAEA,GAAI;MACTW,QAAQ,EAAEA,CAACf,KAAK,EAAEC,KAAK,KAAKH,iBAAiB,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAE;MACnEe,YAAY,EAAEA,CAAChB,KAAK,EAAEO,IAAI,KAAKD,gBAAgB,CAACP,KAAK,EAAEC,KAAK,EAAEO,IAAI;IAAE,GAH/DH,GAAG,CAACa,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACnB,EAAA,CApCQD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}