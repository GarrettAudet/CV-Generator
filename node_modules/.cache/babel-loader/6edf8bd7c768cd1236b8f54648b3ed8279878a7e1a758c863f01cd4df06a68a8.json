{"ast":null,"code":"var _jsxFileName = \"/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/Education/Education.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { faSchool } from '@fortawesome/free-solid-svg-icons';\nimport './Education.css';\nimport SegmentHeader from '../subHeader/segmentHeader';\nimport ExperienceHeader from '../WorkExperience/ExperienceHeader';\nimport { educationData } from '../sampleData/sampleData';\nimport '../CommonStyles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Education() {\n  _s();\n  const [educations, setEducation] = useState(jobsData);\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleVisibility = () => {\n    setIsVisible(!isVisible);\n  };\n  const handleFieldChange = (index, field, value) => {\n    const updatedEducation = educations.map((education, idx) => {\n      if (idx === index) {\n        return {\n          ...education,\n          [field]: value\n        };\n      }\n      return education;\n    });\n    setEducation(updatedEducation);\n  };\n  const handleDateChange = (index, field, date) => {\n    const updatedEducation = educations.map((education, idx) => {\n      if (idx === index) {\n        return {\n          ...education,\n          [field]: date\n        };\n      }\n      return education;\n    });\n    setEducation(updatedEducation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Experience\",\n    children: [/*#__PURE__*/_jsxDEV(SegmentHeader, {\n      icon: faSchool,\n      headerText: \"Education\",\n      toggle: toggleVisibility,\n      isVisible: isVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `elementContainer ${isVisible ? 'visible' : ''}`,\n      children: [isVisible && educations.map((education, index) => /*#__PURE__*/_jsxDEV(ExperienceHeader, {\n        toggle: toggleVisibility,\n        headerText: education.educationTopic,\n        additionalClass: index === 0 ? 'firstItem' : ''\n      }, education.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n      /* <JobEntry \n          key={job.id}\n          job={job}\n          isVisible={isVisible}\n          onChange={(field, value) => handleFieldChange(index, field, value)}\n          onDateChange={(field, date) => handleDateChange(index, field, date)}\n      /> */), /*#__PURE__*/_jsxDEV(AddExperience, {\n        headerText: \"Add Education\",\n        toggle: toggleVisibility,\n        isVisible: isVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Education, \"ThO08xFaCLy3NoSjoxJPmfxTDVc=\");\n_c = Education;\nvar _c;\n$RefreshReg$(_c, \"Education\");","map":{"version":3,"names":["React","useState","faSchool","SegmentHeader","ExperienceHeader","educationData","jsxDEV","_jsxDEV","Education","_s","educations","setEducation","jobsData","isVisible","setIsVisible","toggleVisibility","handleFieldChange","index","field","value","updatedEducation","map","education","idx","handleDateChange","date","className","children","icon","headerText","toggle","fileName","_jsxFileName","lineNumber","columnNumber","educationTopic","additionalClass","id","AddExperience","_c","$RefreshReg$"],"sources":["/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/Education/Education.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { faSchool } from '@fortawesome/free-solid-svg-icons';\nimport './Education.css';\nimport SegmentHeader from '../subHeader/segmentHeader'\nimport ExperienceHeader from '../WorkExperience/ExperienceHeader'\nimport { educationData } from '../sampleData/sampleData'; \nimport '../CommonStyles/styles.css'\n\nexport default function Education() {\n    const [educations, setEducation] = useState(jobsData);\n    const [isVisible, setIsVisible] = useState(false);\n\n    const toggleVisibility = () => {\n        setIsVisible(!isVisible); \n    };\n\n    const handleFieldChange = (index, field, value) => {\n        const updatedEducation = educations.map((education, idx) => {\n            if (idx === index) {\n                return {...education, [field]: value};\n            }\n            return education;\n        });\n        setEducation(updatedEducation);\n    };\n\n    const handleDateChange = (index, field, date) => {\n        const updatedEducation = educations.map((education, idx) => {\n            if (idx === index) {\n                return {...education, [field]: date};\n            }\n            return education;\n        });\n        setEducation(updatedEducation);\n    };\n\n    return (\n        <div className=\"Experience\">\n            <SegmentHeader icon={faSchool} headerText=\"Education\" toggle={toggleVisibility} isVisible = {isVisible} />\n            <div className={`elementContainer ${isVisible ? 'visible' : ''}`}>\n                {isVisible && educations.map((education, index) => (\n                    <ExperienceHeader key = {education.id} toggle={toggleVisibility} headerText = {education.educationTopic} additionalClass = {index === 0 ? 'firstItem' : ''}/>\n                    /* <JobEntry \n                        key={job.id}\n                        job={job}\n                        isVisible={isVisible}\n                        onChange={(field, value) => handleFieldChange(index, field, value)}\n                        onDateChange={(field, date) => handleDateChange(index, field, date)}\n                    /> */\n                ))}\n                <AddExperience headerText = \"Add Education\" toggle={toggleVisibility} isVisible = {isVisible}/>\n            </div>\n         </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}