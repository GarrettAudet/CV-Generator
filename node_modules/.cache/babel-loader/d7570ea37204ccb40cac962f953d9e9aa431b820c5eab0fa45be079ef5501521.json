{"ast":null,"code":"var _jsxFileName = \"/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/DataList/DataList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport SegmentHeader from './SegmentHeader';\nimport AddItem from './AddItem';\nimport './DataList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataList({\n  data,\n  setData,\n  icon,\n  sectionTitle,\n  addText\n}) {\n  _s();\n  const [items, setItems] = useState(data);\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleVisibility = () => {\n    setIsVisible(!isVisible);\n  };\n  const handleFieldChange = (index, field, value) => {\n    const updatedItems = items.map((item, idx) => {\n      if (idx === index) {\n        return {\n          ...item,\n          [field]: value\n        };\n      }\n      return item;\n    });\n    setItems(updatedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Experience\",\n    children: [/*#__PURE__*/_jsxDEV(SegmentHeader, {\n      icon: icon,\n      headerText: sectionTitle,\n      toggle: toggleVisibility,\n      isVisible: isVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `elementContainer ${isVisible ? 'visible' : ''}`,\n      children: [isVisible && items.map((item, index) => /*#__PURE__*/_jsxDEV(SegmentHeader, {\n        toggle: toggleVisibility,\n        headerText: item.title,\n        additionalClass: index === 0 ? 'firstItem' : ''\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(AddItem, {\n        headerText: addText,\n        toggle: toggleVisibility,\n        isVisible: isVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(DataList, \"XaLrbcy43hUz7FRRhazurNhR4nQ=\");\n_c = DataList;\nexport default DataList;\nvar _c;\n$RefreshReg$(_c, \"DataList\");","map":{"version":3,"names":["React","useState","faChevronUp","SegmentHeader","AddItem","jsxDEV","_jsxDEV","DataList","data","setData","icon","sectionTitle","addText","_s","items","setItems","isVisible","setIsVisible","toggleVisibility","handleFieldChange","index","field","value","updatedItems","map","item","idx","className","children","headerText","toggle","fileName","_jsxFileName","lineNumber","columnNumber","title","additionalClass","id","_c","$RefreshReg$"],"sources":["/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/DataList/DataList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport SegmentHeader from './SegmentHeader';\nimport AddItem from './AddItem'; \nimport './DataList.css'\n\nfunction DataList({ data, setData, icon, sectionTitle, addText }) {\n    const [items, setItems] = useState(data);\n    const [isVisible, setIsVisible] = useState(false);\n\n    const toggleVisibility = () => {\n        setIsVisible(!isVisible); \n    };\n\n    const handleFieldChange = (index, field, value) => {\n        const updatedItems = items.map((item, idx) => {\n            if (idx === index) {\n                return {...item, [field]: value};\n            }\n            return item;\n        });\n        setItems(updatedItems);\n    };\n\n    return (\n        <div className=\"Experience\">\n            <SegmentHeader icon={icon} headerText={sectionTitle} toggle={toggleVisibility} isVisible={isVisible} />\n            <div className={`elementContainer ${isVisible ? 'visible' : ''}`}>\n                {isVisible && items.map((item, index) => (\n                    <SegmentHeader key={item.id} toggle={toggleVisibility} headerText={item.title} additionalClass={index === 0 ? 'firstItem' : ''}/>\n                ))}\n                <AddItem headerText={addText} toggle={toggleVisibility} isVisible={isVisible}/>\n            </div>\n        </div>\n    );\n}\n\nexport default DataList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,IAAI;EAAEC,YAAY;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACO,IAAI,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC/C,MAAMC,YAAY,GAAGT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MAC1C,IAAIA,GAAG,KAAKN,KAAK,EAAE;QACf,OAAO;UAAC,GAAGK,IAAI;UAAE,CAACJ,KAAK,GAAGC;QAAK,CAAC;MACpC;MACA,OAAOG,IAAI;IACf,CAAC,CAAC;IACFV,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,oBACIjB,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBtB,OAAA,CAACH,aAAa;MAACO,IAAI,EAAEA,IAAK;MAACmB,UAAU,EAAElB,YAAa;MAACmB,MAAM,EAAEZ,gBAAiB;MAACF,SAAS,EAAEA;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvG5B,OAAA;MAAKqB,SAAS,EAAE,oBAAoBX,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;MAAAY,QAAA,GAC5DZ,SAAS,IAAIF,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEL,KAAK,kBAChCd,OAAA,CAACH,aAAa;QAAe2B,MAAM,EAAEZ,gBAAiB;QAACW,UAAU,EAAEJ,IAAI,CAACU,KAAM;QAACC,eAAe,EAAEhB,KAAK,KAAK,CAAC,GAAG,WAAW,GAAG;MAAG,GAA3GK,IAAI,CAACY,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqG,CACnI,CAAC,eACF5B,OAAA,CAACF,OAAO;QAACyB,UAAU,EAAEjB,OAAQ;QAACkB,MAAM,EAAEZ,gBAAiB;QAACF,SAAS,EAAEA;MAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACrB,EAAA,CA7BQN,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}