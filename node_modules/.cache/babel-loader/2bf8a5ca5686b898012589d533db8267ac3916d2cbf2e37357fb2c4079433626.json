{"ast":null,"code":"var _jsxFileName = \"/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/WorkExperience/JobEntry.js\";\nimport React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './JobEntry.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobEntry({\n  job,\n  onChange,\n  onDateChange\n}) {\n  const handleChange = (index, field, value) => {\n    setJobs(prevJobs => prevJobs.map((job, idx) => idx === index ? {\n      ...job,\n      [field]: value\n    } : job));\n  };\n\n  // Toggles Visibility of Specific ID\n  const toggleVisibility = id => {\n    // Update the jobs state by creating a new array with modified visibility\n    setJobs(jobs => jobs.map(job => {\n      if (job.id === id) {\n        // Toggle the visibility of the job that matches the ID\n        return {\n          ...job,\n          isVisible: !job.isVisible\n        };\n      }\n      // Return all other jobs unchanged\n      return job;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `experienceInput ${job.isVisible ? '' : 'hidden'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"experienceLabel\",\n        children: \"Job Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputField\",\n        type: \"text\",\n        name: \"jobTitle\",\n        value: job.jobTitle,\n        onChange: e => onChange(e.target.name, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"experienceLabel\",\n        children: \"Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputField\",\n        type: \"text\",\n        name: \"company\",\n        value: job.company,\n        onChange: e => onChange(e.target.name, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"experienceLabel\",\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \"inputField\",\n        selected: job.startDate,\n        onChange: date => onDateChange('startDate', date),\n        dateFormat: \"MMMM yyyy\",\n        showMonthYearPicker: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"experienceLabel\",\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \"inputField\",\n        selected: job.endDate,\n        onChange: date => onDateChange('endDate', date),\n        dateFormat: \"MMMM yyyy\",\n        showMonthYearPicker: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"experienceLabel\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"inputField descriptionInput\",\n        name: \"description\",\n        value: job.description,\n        onChange: e => onChange(e.target.name, e.target.value),\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = JobEntry;\nexport default JobEntry;\nvar _c;\n$RefreshReg$(_c, \"JobEntry\");","map":{"version":3,"names":["React","DatePicker","jsxDEV","_jsxDEV","JobEntry","job","onChange","onDateChange","handleChange","index","field","value","setJobs","prevJobs","map","idx","toggleVisibility","id","jobs","isVisible","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","jobTitle","e","target","company","selected","startDate","date","dateFormat","showMonthYearPicker","endDate","description","rows","_c","$RefreshReg$"],"sources":["/home/myxubuntuos/repos/CV-Generator/src/components/LeftSide/WorkExperience/JobEntry.js"],"sourcesContent":["import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './JobEntry.css';\n\nfunction JobEntry({ job, onChange, onDateChange }) {\n    const handleChange = (index, field, value) => {\n        setJobs(prevJobs => prevJobs.map((job, idx) => idx === index ? {...job, [field]: value} : job));\n    };\n\n    // Toggles Visibility of Specific ID\n    const toggleVisibility = (id) => {\n        // Update the jobs state by creating a new array with modified visibility\n        setJobs(jobs => jobs.map(job => {\n            if (job.id === id) {\n                // Toggle the visibility of the job that matches the ID\n                return {\n                    ...job,\n                    isVisible: !job.isVisible\n                };\n            }\n            // Return all other jobs unchanged\n            return job;\n        }));\n    }; \n    return (\n    <form className={`experienceInput ${job.isVisible ? '' : 'hidden'}`}>\n        <div className=\"detailItem\">\n            <label className=\"experienceLabel\">Job Title</label>\n            <input\n                className=\"inputField\"\n                type=\"text\"\n                name=\"jobTitle\"\n                value={job.jobTitle}\n                onChange={e => onChange(e.target.name, e.target.value)}\n            />\n        </div>\n        <div className=\"detailItem\">\n            <label className=\"experienceLabel\">Company</label>\n            <input\n                className=\"inputField\"\n                type=\"text\"\n                name=\"company\"\n                value={job.company}\n                onChange={e => onChange(e.target.name, e.target.value)}\n            />\n        </div>\n        <div className=\"detailItem\">\n            <label className=\"experienceLabel\">Start Date</label>\n            <DatePicker\n                className=\"inputField\"\n                selected={job.startDate}\n                onChange={date => onDateChange('startDate', date)}\n                dateFormat=\"MMMM yyyy\"\n                showMonthYearPicker\n            />\n        </div>\n        <div className=\"detailItem\">\n            <label className=\"experienceLabel\">End Date</label>\n            <DatePicker\n                className=\"inputField\"\n                selected={job.endDate}\n                onChange={date => onDateChange('endDate', date)}\n                dateFormat=\"MMMM yyyy\"\n                showMonthYearPicker\n            />\n        </div>\n        <div className=\"detailItem\">\n            <label className=\"experienceLabel\">Description</label>\n            <textarea\n                className=\"inputField descriptionInput\"\n                name=\"description\"\n                value={job.description}\n                onChange={e => onChange(e.target.name, e.target.value)}\n                rows=\"4\"\n            />\n        </div>\n    </form>\n  );\n}\n\nexport default JobEntry;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}